---
AWSTemplateFormatVersion: "2010-09-09"
Description: Create a VPC with (for now, public) subnets

Parameters:

  # ManagementIp:
  #   Type: String
  #   Description: "(Optional) IP (not CIDR) to allow for management via ssh"
  #   MinLength: 0
  #   MaxLength: 18
  #   AllowedPattern: "((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3}))?"
  VPCcidr:
    Type: String
    Description: "CIDR Block for the VPC."
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\/(\\d{1,2})"
    Default: "10.20.0.0/16"

  SNcidrs:
    Type: CommaDelimitedList
    Description: "Comma-delimited list of two CIDR blocks for the subnets.  These must fall within the VPC CIDR block."
    Default: "10.20.0.0/24, 10.20.1.0/24"

Resources:

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCcidr
      EnableDnsSupport: true
      EnableDnsHostnames: false
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-vpc"

  Subnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Sub "${AWS::Region}"
      CidrBlock: !Select
        - 0
        - !Ref SNcidrs
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-subnet1"

  Subnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Sub "${AWS::Region}"
      CidrBlock: !Select
        - 1
        - !Ref SNcidrs
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-subnet2"

  VPCigw:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-vpc-igw"

  IGWattach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref VPCigw
      VpcId: !Ref VPC

  RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-rt"

  PubRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref VPCigw
      RouteTableId: !Ref RouteTable

  Subnet1RTassoc:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1

  Subnet2RTassoc:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet2


Outputs:

  VPCid:
    Value: !Ref VPC
  SN1id:
    Value: !Ref Subnet1
  SN2id:
    Value: !Ref Subnet2